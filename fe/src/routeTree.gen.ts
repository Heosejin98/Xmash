/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './pages/__root'
import { Route as RecordImport } from './pages/record'
import { Route as LoginImport } from './pages/login'
import { Route as LeaderBoardImport } from './pages/leader-board'
import { Route as AuthImport } from './pages/_auth'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const AuthAboutLazyImport = createFileRoute('/_auth/about')()

// Create/Update Routes

const RecordRoute = RecordImport.update({
  path: '/record',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const LeaderBoardRoute = LeaderBoardImport.update({
  path: '/leader-board',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./pages/index.lazy').then((d) => d.Route))

const AuthAboutLazyRoute = AuthAboutLazyImport.update({
  path: '/about',
  getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./pages/_auth/about.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/leader-board': {
      id: '/leader-board'
      path: '/leader-board'
      fullPath: '/leader-board'
      preLoaderRoute: typeof LeaderBoardImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/record': {
      id: '/record'
      path: '/record'
      fullPath: '/record'
      preLoaderRoute: typeof RecordImport
      parentRoute: typeof rootRoute
    }
    '/_auth/about': {
      id: '/_auth/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AuthAboutLazyImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  AuthRoute: AuthRoute.addChildren({ AuthAboutLazyRoute }),
  LeaderBoardRoute,
  LoginRoute,
  RecordRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/leader-board",
        "/login",
        "/record"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/about"
      ]
    },
    "/leader-board": {
      "filePath": "leader-board.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/record": {
      "filePath": "record.tsx"
    },
    "/_auth/about": {
      "filePath": "_auth/about.lazy.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
