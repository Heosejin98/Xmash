name: BE PROD CD Pipeline

on:
  push:
    branches:
      - be/prod
      - be/ci/118
    paths:
      - 'be/**'
      - '*'

jobs:
  build:
    name: Build Backend
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '21'
          cache: gradle

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        working-directory: ./be/xmash

      - name: Build with Gradle
        run: ./gradlew bootJar
        working-directory: ./be/xmash

      - name: Build Docker image
        working-directory: ./be/xmash
        run: |
          ls -la
          echo "----------------------------"
          echo ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_IMAGE_NAME }}:dev
          docker build -f Dockerfile-dev -t ${{ secrets.DOCKERHUB_USERNAME }}"/"${{ secrets.DOCKERHUB_IMAGE_NAME }}:dev ./

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_IMAGE_NAME }}:dev

      - name: Upload docker compose
        uses: actions/upload-artifact@v4
        with:
          name: docker-compose
          path: ./be/xmash/src/main/resources/docker-compose-prod.yml
          if-no-files-found: error

  deploy:
    needs: build
    name: Deploy Backend
    runs-on: [self-hosted]
    environment: prod

    steps:
      - name: Set up environment variables
        run: |
          cd ~/${{ secrets.DOCKERHUB_IMAGE_NAME }}
          echo "DB_IP_PORT=${{ secrets.DB_IP_PORT }}" > .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
          echo "JASYPT_PASSWORD=${{ secrets.JASYPT_PASSWORD }}" >> .env

      - name: Download docker compose
        uses: actions/download-artifact@v4
        with:
          name: docker-compose
          path: ~/${{ secrets.DOCKERHUB_IMAGE_NAME }}

      - name: Rename downloaded file
        run: |
          cd ~/${{ secrets.DOCKERHUB_IMAGE_NAME }}
          mv docker-compose-prod.yml docker-compose.yml

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Pull latest Docker images
        run: |
          docker-compose -f ~/${{ secrets.DOCKERHUB_IMAGE_NAME }}/docker-compose.yml pull

      - name: Restart docker compose
        run: |
          cd ~/${{ secrets.DOCKERHUB_IMAGE_NAME }}
          docker-compose up -d

      - name: Clean up unused Docker images
        run: docker image prune -af

